/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package assignment.Adminstrator;

import javax.swing.table.DefaultTableModel;
import javax.swing.*;
import java.awt.*;
import java.util.List;

import assignment.Adminstrator.adminstratorPage;

/**
 *
 * @author Admin
 */
public class manageUsers extends javax.swing.JFrame {
  private Administrator administrator;

  /**
   * Creates new form manageUsers
   */
  public manageUsers() {
    administrator = new Administrator();
    initComponents();
    loadUserData();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated
  // Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel1 = new javax.swing.JPanel();
    jPanel2 = new javax.swing.JPanel();
    backButton = new javax.swing.JButton();
    jButton1 = new javax.swing.JButton();
    jButton2 = new javax.swing.JButton();
    jButton3 = new javax.swing.JButton();
    jLabel1 = new javax.swing.JLabel();
    jScrollPane2 = new javax.swing.JScrollPane();
    userTable = new javax.swing.JTable();
    addButton = new javax.swing.JButton();
    deleteButton = new javax.swing.JButton();
    modifyButton = new javax.swing.JButton();
    searchLabel = new javax.swing.JLabel();
    searchTextField = new javax.swing.JTextField();
    searchButton = new javax.swing.JButton();
    roleCombo = new javax.swing.JComboBox<>();
    roleLabel = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    jLabel4 = new javax.swing.JLabel();
    jLabel5 = new javax.swing.JLabel();
    jLabel6 = new javax.swing.JLabel();
    jLabel7 = new javax.swing.JLabel();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jPanel1.setBackground(new java.awt.Color(255, 255, 255));

    jPanel2.setBackground(new java.awt.Color(0, 0, 0));

    backButton.setBackground(new java.awt.Color(0, 0, 0));
    backButton.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
    backButton.setForeground(new java.awt.Color(255, 255, 255));
    backButton.setText("<");
    backButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    backButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        backButtonActionPerformed(evt);
      }
    });

    jButton1.setBackground(new java.awt.Color(0, 0, 0));
    jButton1.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
    jButton1.setForeground(new java.awt.Color(255, 255, 255));
    jButton1.setText("Manage Users");
    jButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });

    jButton2.setBackground(new java.awt.Color(0, 0, 0));
    jButton2.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
    jButton2.setForeground(new java.awt.Color(255, 255, 255));
    jButton2.setText("Manage Permission");
    jButton2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    jButton2.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton2ActionPerformed(evt);
      }
    });

    jButton3.setBackground(new java.awt.Color(0, 0, 0));
    jButton3.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
    jButton3.setForeground(new java.awt.Color(255, 255, 255));
    jButton3.setText("Generate System Report");
    jButton3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backButton)
                .addGap(41, 41, 41)
                .addComponent(jButton1)
                .addGap(80, 80, 80)
                .addComponent(jButton2)
                .addGap(83, 83, 83)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
                            javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
                            javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
                            javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 62,
                        javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE)));

    jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
    jLabel1.setText("Manage Users");

    userTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object[][] {

        },
        new String[] {
            "ID", "User Name", "Email", "Access Level", "Password"
        }));
    jScrollPane2.setViewportView(userTable);

    addButton.setBackground(new java.awt.Color(0, 0, 0));
    addButton.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
    addButton.setForeground(new java.awt.Color(255, 255, 255));
    addButton.setText("Add");
    addButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        addButtonActionPerformed(evt);
      }
    });

    deleteButton.setBackground(new java.awt.Color(0, 0, 0));
    deleteButton.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
    deleteButton.setForeground(new java.awt.Color(255, 255, 255));
    deleteButton.setText("Delete");
    deleteButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        deleteButtonActionPerformed(evt);
      }
    });

    modifyButton.setBackground(new java.awt.Color(0, 0, 0));
    modifyButton.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
    modifyButton.setForeground(new java.awt.Color(255, 255, 255));
    modifyButton.setText("Modify");
    modifyButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        modifyButtonActionPerformed(evt);
      }
    });

    searchLabel.setText("Search:");

    searchTextField.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        searchTextFieldActionPerformed(evt);
      }
    });

    searchButton.setText("Search");
    searchButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        searchButtonActionPerformed(evt);
      }
    });

    roleCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Admin", "Purchase Manager",
        "Sales Manager", "Finance Manager", "Inventory Manager" }));
    roleCombo.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        roleComboActionPerformed(evt);
      }
    });

    roleLabel.setText("Filter by Role:");

    jLabel2.setText("Role Guide:");

    jLabel3.setText("1 - Admin");

    jLabel4.setText("2 - Purch Man");

    jLabel5.setText("3 - Sales Man");

    jLabel6.setText("4 - Fin Man");

    jLabel7.setText("5 - Inv Man");

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73,
                            javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 82,
                            javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(modifyButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 818,
                            javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(searchLabel)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 251,
                                            javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(searchButton)))
                                .addGap(62, 62, 62)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(roleLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                            javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(roleCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1)))
                        .addGap(88, 88, 88)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(40, 40, 40)
                                .addComponent(jLabel6))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7)))))
                .addGap(64, 64, 64)));
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                    javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchLabel)
                            .addComponent(roleLabel))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchButton)
                            .addComponent(roleCombo, javax.swing.GroupLayout.PREFERRED_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 184,
                    javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(deleteButton)
                    .addComponent(modifyButton))
                .addGap(45, 45, 45)));

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                Short.MAX_VALUE));
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                Short.MAX_VALUE));

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void searchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_searchTextFieldActionPerformed
    searchButtonActionPerformed(evt);
  }// GEN-LAST:event_searchTextFieldActionPerformed

  private void roleComboActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_roleComboActionPerformed
    String selectedRole = roleCombo.getSelectedItem().toString();
    if (selectedRole.equals("Select")) {
      loadUserData();
    } else {
      filterByRole(selectedRole);
    }
  }// GEN-LAST:event_roleComboActionPerformed

  private void filterByRole(String selectedRole) {
    Administrator administrator = new Administrator();
    DefaultTableModel model = (DefaultTableModel) userTable.getModel();
    model.setRowCount(0); // Clear existing rows

    List<String[]> users = administrator.viewUsers();
    boolean foundMatching = false;
    String roleNumber = getRoleNumber(selectedRole);

    for (String[] row : users) {
      if (row[3].trim().equals(roleNumber)) {
        model.addRow(row);
        foundMatching = true;
      }
    }

    if (!foundMatching) {
      JOptionPane.showMessageDialog(this, "No users found with role: " + selectedRole,
          "No Matching Users", JOptionPane.ERROR_MESSAGE);
      loadUserData();
    }
  }

  private String getRoleNumber(String role) {
    switch (role) {
      case "Admin":
        return "1";
      case "Purchase Manager":
        return "2";
      case "Sales Manager":
        return "3";
      case "Finance Manager":
        return "4";
      case "Inventory Manager":
        return "5";
      default:
        return "0";
    }
  }

  private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_searchButtonActionPerformed
    String searchTerm = searchTextField.getText().trim();
    String selectedRole = roleCombo.getSelectedItem().toString();

    DefaultTableModel model = (DefaultTableModel) userTable.getModel();
    model.setRowCount(0); // Clear existing rows

    List<String[]> users = administrator.viewUsers();
    boolean foundMatching = false;

    for (String[] row : users) {
      boolean matchesSearch = searchTerm.isEmpty() || row[1].trim().toLowerCase().contains(searchTerm.toLowerCase())
          || row[2].trim().toLowerCase().contains(searchTerm.toLowerCase());

      boolean matchesRole = selectedRole.equals("Select") || row[3].trim().equals(selectedRole);

      if (matchesSearch && matchesRole) {
        model.addRow(row);
        foundMatching = true;
      }

      if (!foundMatching) {
        JOptionPane.showMessageDialog(this, "No users found with role: " + selectedRole,
            "No Matching Users", JOptionPane.ERROR_MESSAGE);
        loadUserData();
      }
    }

    if (!foundMatching) {
      JOptionPane.showMessageDialog(this, "No users found with role: " + selectedRole,
          "No Matching Users", JOptionPane.ERROR_MESSAGE);
      loadUserData();
    }
  } // GEN-LAST:event_searchButtonActionPerformed

  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
    manageUsers manageUsersFrame = new manageUsers();
    manageUsersFrame.setVisible(true);
    manageUsersFrame.pack();
    manageUsersFrame.setLocationRelativeTo(null);
    this.dispose();
  }// GEN-LAST:event_jButton1ActionPerformed

  private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton2ActionPerformed
    managePermissions managePermissionsFrame = new managePermissions();
    managePermissionsFrame.setVisible(true);
    managePermissionsFrame.pack();
    managePermissionsFrame.setLocationRelativeTo(null);
    this.dispose();
  }// GEN-LAST:event_jButton2ActionPerformed

  private void loadUserData() {
    DefaultTableModel tableModel = (DefaultTableModel) userTable.getModel();
    tableModel.setRowCount(0);
    List<String[]> users = administrator.viewUsers();

    for (String[] user : users) {
      tableModel.addRow(user);
    }
  }

  private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_backButtonActionPerformed
    adminstratorPage adminstratorFrame = new adminstratorPage();
    adminstratorFrame.setVisible(true);
    adminstratorFrame.pack();
    adminstratorFrame.setLocationRelativeTo(null);
    this.dispose();
  }// GEN-LAST:event_backButtonActionPerformed

  private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {
    // Create custom dialog for adding user
    JDialog dialog = new javax.swing.JDialog(this, "Add New User", true);
    dialog.setLayout(new GridLayout(6, 2, 10, 10));

    JTextField userIdField = new javax.swing.JTextField();
    JTextField usernameField = new javax.swing.JTextField();
    JTextField emailField = new javax.swing.JTextField();
    JTextField accessLevelField = new javax.swing.JTextField();
    JTextField passwordField = new javax.swing.JTextField();

    dialog.add(new JLabel("User ID:"));
    dialog.add(userIdField);
    dialog.add(new JLabel("Username:"));
    dialog.add(usernameField);
    dialog.add(new JLabel("Email:"));
    dialog.add(emailField);
    dialog.add(new JLabel("Access Level (1-5):"));
    dialog.add(accessLevelField);
    dialog.add(new JLabel("Password:"));
    dialog.add(passwordField);

    JButton submitButton = new javax.swing.JButton("Add User");
    submitButton.addActionListener(e -> {
      try {
        String userId = userIdField.getText().trim();
        String username = usernameField.getText().trim();
        String email = emailField.getText().trim();
        int accessLevel = Integer.parseInt(accessLevelField.getText().trim());
        String password = new String(passwordField.getText());

        if (userId.isEmpty() || username.isEmpty() || email.isEmpty() || password.isEmpty()) {
          JOptionPane.showMessageDialog(dialog, "All fields are required!");
          return;
        }

        if (accessLevel < 1 || accessLevel > 5) {
          JOptionPane.showMessageDialog(dialog, "Access level must be between 1 and 5!");
          return;
        }

        if (administrator.addUser(userId, username, email, accessLevel, password)) {
          dialog.dispose();
          loadUserData();
        }
      } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(dialog, "Invalid access level!");
      }
    });

    JButton cancelButton = new JButton("Cancel");
    cancelButton.addActionListener(e -> {
      dialog.dispose();
    });

    dialog.add(submitButton);
    dialog.add(cancelButton);
    dialog.setSize(300, 200);
    dialog.setLocationRelativeTo(this);
    dialog.setVisible(true);
  }

  private void modifyButtonActionPerformed(java.awt.event.ActionEvent evt) {
    int selectedRow = userTable.getSelectedRow();
    if (selectedRow == -1) {
      JOptionPane.showMessageDialog(this, "Please select a user to modify!");
      return;
    }

    String userId = (String) userTable.getValueAt(selectedRow, 0);
    String username = (String) userTable.getValueAt(selectedRow, 1);
    String currentEmail = (String) userTable.getValueAt(selectedRow, 2);
    String currentAccessLevel = (String) userTable.getValueAt(selectedRow, 3);
    String currentPassword = (String) userTable.getValueAt(selectedRow, 4);

    // Create custom dialog for modifying user
    JDialog dialog = new JDialog(this, "Modify User", true);
    dialog.setLayout(new GridLayout(6, 2, 10, 10));

    JTextField emailField = new JTextField(currentEmail);
    JTextField accessLevelField = new JTextField(currentAccessLevel);
    JTextField passwordField = new JTextField(currentPassword);

    dialog.add(new JLabel("User ID: "));
    dialog.add(new JLabel(userId));
    dialog.add(new JLabel("Username:"));
    dialog.add(new JLabel(username));
    dialog.add(new JLabel("Email:"));
    dialog.add(emailField);
    dialog.add(new JLabel("Access Level (1-5):"));
    dialog.add(accessLevelField);
    dialog.add(new JLabel("New Password:"));
    dialog.add(passwordField);

    JButton submitButton = new JButton("Update User");
    submitButton.addActionListener(e -> {
      try {
        String newEmail = emailField.getText().trim();
        int newAccessLevel = Integer.parseInt(accessLevelField.getText().trim());
        String newPassword = new String(passwordField.getText());

        if (newAccessLevel < 1 || newAccessLevel > 5) {
          JOptionPane.showMessageDialog(dialog, "Access level must be between 1 and 5!");
          return;
        }

        if (administrator.modifyUser(username, newEmail, newAccessLevel,
            newPassword.isEmpty() ? null : newPassword)) {
          dialog.dispose();
          loadUserData();
        }
      } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(dialog, "Invalid access level!");
      }
    });

    JButton cancelButton = new JButton("Cancel");
    cancelButton.addActionListener(e -> {
      dialog.dispose();
    });

    dialog.add(submitButton);
    dialog.add(cancelButton);
    dialog.setSize(300, 200);
    dialog.setLocationRelativeTo(this);
    dialog.setVisible(true);
  }

  private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {
    int selectedRow = userTable.getSelectedRow();
    if (selectedRow == -1) {
      JOptionPane.showMessageDialog(this, "Please select a user to remove!");
      return;
    }

    String username = (String) userTable.getValueAt(selectedRow, 1);

    int confirm = JOptionPane.showConfirmDialog(
        this,
        "Are you sure you want to remove user: " + username + "?",
        "Confirm Removal",
        JOptionPane.YES_NO_OPTION);

    if (confirm == JOptionPane.YES_OPTION) {
      if (administrator.removeUser(username)) {
        loadUserData();
      }
    }
  }

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
    // (optional) ">
    /*
     * If Nimbus (introduced in Java SE 6) is not available, stay with the default
     * look and feel.
     * For details see
     * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(manageUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(manageUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(manageUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(manageUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    // </editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new manageUsers().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton addButton;
  private javax.swing.JButton backButton;
  private javax.swing.JButton deleteButton;
  private javax.swing.JButton jButton1;
  private javax.swing.JButton jButton2;
  private javax.swing.JButton jButton3;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JButton modifyButton;
  private javax.swing.JComboBox<String> roleCombo;
  private javax.swing.JLabel roleLabel;
  private javax.swing.JButton searchButton;
  private javax.swing.JLabel searchLabel;
  private javax.swing.JTextField searchTextField;
  private javax.swing.JTable userTable;
  // End of variables declaration//GEN-END:variables
}
