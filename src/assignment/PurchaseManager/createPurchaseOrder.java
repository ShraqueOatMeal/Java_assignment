/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package assignment.PurchaseManager;

import assignment.Session;
import javax.swing.JOptionPane;
import assignment.FileHandler;
import assignment.Items;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

/**
 *
 * @author Admin
 */
public class createPurchaseOrder extends javax.swing.JFrame {
  private PurchaseManager purchaseManager = new PurchaseManager();

  /**
   * Creates new form createPurchaseOrder
   */
  public createPurchaseOrder() {
    initComponents();
    loadItemsBelowReorderLevel();
    jComboBox1.addActionListener(e -> updateQuantityLabel());
    jComboBox1.addActionListener(e -> updateThresholdLabel());
    jComboBox1.addActionListener(e -> loadSuppliers());
    setupDateComboBoxes();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated
  // Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel1 = new javax.swing.JPanel();
    jPanel2 = new javax.swing.JPanel();
    jButton7 = new javax.swing.JButton();
    jButton5 = new javax.swing.JButton();
    jButton9 = new javax.swing.JButton();
    jButton2 = new javax.swing.JButton();
    jButton8 = new javax.swing.JButton();
    viewPurchaseButton = new javax.swing.JButton();
    yearLabel = new javax.swing.JLabel();
    monthLabel = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    dayLabel = new javax.swing.JLabel();
    jComboBox1 = new javax.swing.JComboBox<>();
    jLabel6 = new javax.swing.JLabel();
    jSpinner1 = new javax.swing.JSpinner();
    thresholdLabel = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    jLabel4 = new javax.swing.JLabel();
    quantityLabel = new javax.swing.JLabel();
    jLabel5 = new javax.swing.JLabel();
    jLabel7 = new javax.swing.JLabel();
    jButton1 = new javax.swing.JButton();
    dateCombo = new javax.swing.JComboBox<>();
    monthCombo = new javax.swing.JComboBox<>();
    yearCombo = new javax.swing.JComboBox<>();
    supplierCombo = new javax.swing.JComboBox<>();
    jLabel8 = new javax.swing.JLabel();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jPanel1.setBackground(new java.awt.Color(255, 255, 255));

    jPanel2.setBackground(new java.awt.Color(0, 0, 0));

    jButton7.setBackground(new java.awt.Color(0, 0, 0));
    jButton7.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
    jButton7.setForeground(new java.awt.Color(255, 255, 255));
    jButton7.setText("<");
    jButton7.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    jButton7.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton7ActionPerformed(evt);
      }
    });

    jButton5.setBackground(new java.awt.Color(0, 0, 0));
    jButton5.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
    jButton5.setForeground(new java.awt.Color(255, 255, 255));
    jButton5.setText("View Items");
    jButton5.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    jButton5.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton5ActionPerformed(evt);
      }
    });

    jButton9.setBackground(new java.awt.Color(0, 0, 0));
    jButton9.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
    jButton9.setForeground(new java.awt.Color(255, 255, 255));
    jButton9.setText("Create Purchase Order");
    jButton9.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    jButton9.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton9ActionPerformed(evt);
      }
    });

    jButton2.setBackground(new java.awt.Color(0, 0, 0));
    jButton2.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
    jButton2.setForeground(new java.awt.Color(255, 255, 255));
    jButton2.setText("View Requisitions");
    jButton2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    jButton2.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton2ActionPerformed(evt);
      }
    });

    jButton8.setBackground(new java.awt.Color(0, 0, 0));
    jButton8.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
    jButton8.setForeground(new java.awt.Color(255, 255, 255));
    jButton8.setText("View Supplier");
    jButton8.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    jButton8.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton8ActionPerformed(evt);
      }
    });

    viewPurchaseButton.setBackground(new java.awt.Color(0, 0, 0));
    viewPurchaseButton.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
    viewPurchaseButton.setForeground(new java.awt.Color(255, 255, 255));
    viewPurchaseButton.setText("View Purchase Order");
    viewPurchaseButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    viewPurchaseButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        viewPurchaseButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton7)
                .addGap(18, 18, 18)
                .addComponent(jButton5)
                .addGap(18, 18, 18)
                .addComponent(jButton9)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton8)
                .addGap(18, 18, 18)
                .addComponent(viewPurchaseButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
                            javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
                            javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
                            javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
                            javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(viewPurchaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
                            javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

    yearLabel.setText("Year:");

    monthLabel.setText("Month:");

    jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
    jLabel2.setText("Create Purchase Order");

    dayLabel.setText("Day:");

    jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
    jComboBox1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jComboBox1ActionPerformed(evt);
      }
    });

    jLabel6.setFont(new java.awt.Font("sansserif", 2, 24)); // NOI18N
    jLabel6.setText("/");

    jSpinner1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

    thresholdLabel.setFont(new java.awt.Font("sansserif", 2, 24)); // NOI18N
    thresholdLabel.setText("0");

    jLabel3.setFont(new java.awt.Font("Tahoma", 2, 24)); // NOI18N
    jLabel3.setText("Select Item:");

    jLabel4.setFont(new java.awt.Font("Tahoma", 2, 24)); // NOI18N
    jLabel4.setText("Select Quantity:");

    quantityLabel.setFont(new java.awt.Font("sansserif", 2, 24)); // NOI18N
    quantityLabel.setText("0");

    jLabel5.setFont(new java.awt.Font("Tahoma", 2, 24)); // NOI18N
    jLabel5.setText("Quantity Of Items: ");

    jLabel7.setFont(new java.awt.Font("sansserif", 2, 24)); // NOI18N
    jLabel7.setText("Date Before:");

    jButton1.setBackground(new java.awt.Color(0, 0, 0));
    jButton1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
    jButton1.setForeground(new java.awt.Color(255, 255, 255));
    jButton1.setText("Create");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });

    dateCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

    monthCombo
        .setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

    yearCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
    yearCombo.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        yearComboActionPerformed(evt);
      }
    });

    supplierCombo.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
    supplierCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
    supplierCombo.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        supplierComboActionPerformed(evt);
      }
    });

    jLabel8.setFont(new java.awt.Font("sansserif", 2, 24)); // NOI18N
    jLabel8.setText("Supplier:");

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(233, 233, 233)
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel8))
                                .addGap(62, 62, 62)
                                .addGroup(
                                    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(supplierCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE,
                                            Short.MAX_VALUE)
                                        .addComponent(jComboBox1, 0, 314, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(quantityLabel)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel6)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(thresholdLabel))
                                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 132,
                                            javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout
                                                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(yearLabel)
                                                .addComponent(yearCombo, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                    javax.swing.GroupLayout.DEFAULT_SIZE,
                                                    javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(44, 44, 44)
                                            .addGroup(jPanel1Layout
                                                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(monthCombo, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                    javax.swing.GroupLayout.DEFAULT_SIZE,
                                                    javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(monthLabel))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(jPanel1Layout
                                                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(dateCombo, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                    javax.swing.GroupLayout.DEFAULT_SIZE,
                                                    javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(dayLabel)))))
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 576,
                                javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 255, Short.MAX_VALUE)))));
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                    javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel2)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE,
                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                            javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quantityLabel)
                            .addComponent(jLabel6)
                            .addComponent(thresholdLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel7))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(yearLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(yearCombo, javax.swing.GroupLayout.PREFERRED_SIZE,
                                    javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE,
                            javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(monthLabel)
                            .addComponent(dayLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(monthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 25,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateCombo, javax.swing.GroupLayout.PREFERRED_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(supplierCombo, javax.swing.GroupLayout.PREFERRED_SIZE,
                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(55, 55, 55)));

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                Short.MAX_VALUE));
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                Short.MAX_VALUE));

    pack();
    setLocationRelativeTo(null);
  }// </editor-fold>//GEN-END:initComponents

  private void viewPurchaseButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_viewPurchaseButtonActionPerformed
    viewPurchaseOrder purchaseManagerFrame = new viewPurchaseOrder();
    purchaseManagerFrame.setVisible(true);
    purchaseManagerFrame.pack();
    purchaseManagerFrame.setLocationRelativeTo(null);
    this.dispose();
  }// GEN-LAST:event_viewPurchaseButtonActionPerformed

  private void supplierComboActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_supplierComboActionPerformed
    // TODO add your handling code here:
  }// GEN-LAST:event_supplierComboActionPerformed

  private void yearComboActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_yearComboActionPerformed
    // TODO add your handling code here:
  }// GEN-LAST:event_yearComboActionPerformed

  private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jComboBox1ActionPerformed
    // TODO add your handling code here:
  }// GEN-LAST:event_jComboBox1ActionPerformed

  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
    Session session = Session.getInstance();
    String itemName = (String) jComboBox1.getSelectedItem();
    String username = session.getUsername();
    String userId = session.getUserId();

    String year = (String) yearCombo.getSelectedItem();
    String month = (String) monthCombo.getSelectedItem();
    String day = (String) dateCombo.getSelectedItem();
    String date = String.format("%s/%s/%s", year, month, day);

    String selectedSupplier = (String) supplierCombo.getSelectedItem();
    try {
      int quantity;
      try {
        quantity = Integer.parseInt(jSpinner1.getValue().toString());
        if (quantity <= 0) {
          JOptionPane.showMessageDialog(null, "Quantity must be greater than 0.");
          return;
        }
      } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Please enter a valid quantity.");
        return;
      }
      if (itemName.equals("Select") || selectedSupplier == null) {
        JOptionPane.showMessageDialog(null, "Please select an item and quantity.");
        return;
      }

      // Get supplier ID from the selected item
      FileHandler supplier = new FileHandler("src/assignment/database/suppliers.txt");
      List<String[]> suppliers = supplier.readData();
      String supplierId = "";
      String supplierName = (String) selectedSupplier.split("-")[0].trim();
      String price = (String) selectedSupplier.split("\\$")[1].trim();

      for (String[] supplierData : suppliers) {
        if (supplierData[1].equals(supplierName)) {
          supplierId = supplierData[0];
          break;
        }
      }

      Items item = new Items(itemName);
      String itemId = item.getItemId();

      if (itemId == null || supplierId == null || supplierId.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Item or Supplier not found", "Error", JOptionPane.ERROR_MESSAGE);
        return;
      }

      FileHandler purchOrder = new FileHandler("src/assignment/database/purchOrder.txt");
      List<String[]> purchOrders = purchOrder.readData();
      String existingItemID = "";
      for (String[] purchOrderData : purchOrders) {
        if (purchOrderData[6].equals(itemId)) {
          JOptionPane.showMessageDialog(null, "Purchase Order already made", "Error", JOptionPane.ERROR_MESSAGE);
          return;
        }
      }

      purchaseManager.createPurchaseOrder(itemName, quantity, userId, date,
          itemId, supplierId, price);
      purchaseManager.saveAll();

      createSuccess createSuccessFrame = new createSuccess();
      createSuccessFrame.setVisible(true);
      createSuccessFrame.pack();
      createSuccessFrame.setLocationRelativeTo(null);
      this.dispose();
    } catch (Exception e) {
      e.printStackTrace();
      JOptionPane.showMessageDialog(null, "Please select an item and quantity.", "Error", JOptionPane.ERROR_MESSAGE);
    }

  }// GEN-LAST:event_jButton1ActionPerformed

  private void loadSuppliers() {
    FileHandler supplier = new FileHandler("src/assignment/database/suppliers.txt");
    FileHandler bridge = new FileHandler("src/assignment/database/bridge.txt");
    FileHandler stock = new FileHandler("src/assignment/database/stock.txt");

    List<String[]> suppliers = supplier.readData();
    List<String[]> bridges = bridge.readData();
    List<String[]> stocks = stock.readData();

    String selectedItemName = (String) jComboBox1.getSelectedItem();
    supplierCombo.removeAllItems(); // Clear existing items

    // First find the stockID for the selected item name
    String stockID = "";
    for (String[] stockData : stocks) {
      if (stockData[1].equals(selectedItemName)) {
        stockID = stockData[0];
        break;
      }
    }

    // Find all supplierIDs from bridge table that match the stockID
    Map<String, String> supplierPrices = new HashMap<>();
    for (String[] bridgeData : bridges) {
      if (bridgeData[0].equals(stockID)) {
        String supplierID = bridgeData[1]; // bridge[1] contains supplierID
        String price = bridgeData[2]; // bridge[2] contains supplierName

        for (String[] supplierData : suppliers) {
          if (supplierData[0].equals(supplierID)) {
            String displayText = supplierData[1] + "- $" + price;
            supplierPrices.put(supplierID, displayText);
          }
        }
      }
    }

    // Add only the supplier names that match the linked supplierIDs
    for (String displayText : supplierPrices.values()) {
      supplierCombo.addItem(displayText);
    }
  }

  private void loadItemsBelowReorderLevel() {
    FileHandler fileHandler = new FileHandler("src/assignment/database/stock.txt");
    List<String[]> items = fileHandler.readData();
    for (String[] itemData : items) {
      String itemName = itemData[1];
      int quantity = Integer.parseInt(itemData[2]);
      int reorderLevel = Integer.parseInt(itemData[3]);

      // Check if quantity is below reorder level
      if (quantity < reorderLevel) {
        jComboBox1.addItem(itemName); // Display name with quantity
      }
    }
  }

  private void updateQuantityLabel() {
    String selectedItem = (String) jComboBox1.getSelectedItem();

    if (selectedItem != null && selectedItem.equals("Select")) {
      quantityLabel.setText("0");
      return;
    }

    if (selectedItem != null) {
      // Extract and display quantity from the selected item's text
      FileHandler fileHandler = new FileHandler("src/assignment/database/stock.txt");
      List<String[]> items = fileHandler.readData();
      for (String[] itemData : items) {
        if (itemData[1].equals(selectedItem)) {
          quantityLabel.setText(String.valueOf(Integer.parseInt(itemData[2])));
          break;
        }
      }
    }
  }

  private void updateThresholdLabel() {
    String selectedItem = (String) jComboBox1.getSelectedItem();

    if (selectedItem != null && selectedItem.equals("Select")) {
      thresholdLabel.setText("0");
      return;
    }

    if (selectedItem != null) {
      // Extract and display quantity from the selected item's text
      FileHandler fileHandler = new FileHandler("src/assignment/database/stock.txt");
      List<String[]> items = fileHandler.readData();
      for (String[] itemData : items) {
        if (itemData[1].equals(selectedItem)) {
          thresholdLabel.setText(String.valueOf(Integer.parseInt(itemData[3])));
          break;
        }
      }
    }
  }

  private void setupDateComboBoxes() {
    yearCombo.removeAllItems();
    int currentYear = java.time.Year.now().getValue();
    for (int year = currentYear; year <= currentYear + 10; year++) {
      yearCombo.addItem(String.valueOf(year));
    }

    monthCombo.removeAllItems();
    for (int month = 1; month <= 12; month++) {
      monthCombo.addItem(String.format("%02d", month));
    }

    updateDayComboBox();

    monthCombo.addActionListener(e -> updateDayComboBox());
    yearCombo.addActionListener(e -> updateDayComboBox());
  }

  private void updateDayComboBox() {
    dateCombo.removeAllItems();
    int year = Integer.parseInt(yearCombo.getSelectedItem().toString());
    int month = Integer.parseInt(monthCombo.getSelectedItem().toString());

    java.time.YearMonth yearMonth = java.time.YearMonth.of(year, month);
    int daysInMonth = yearMonth.lengthOfMonth();

    for (int day = 1; day <= daysInMonth; day++) {
      dateCombo.addItem(String.format("%02d", day));
    }
  }

  private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton5ActionPerformed
    viewItems viewItemsFrame = new viewItems();
    viewItemsFrame.setVisible(true);
    viewItemsFrame.pack();
    viewItemsFrame.setLocationRelativeTo(null);
    this.dispose();
  }// GEN-LAST:event_jButton5ActionPerformed

  private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton9ActionPerformed
    createPurchaseOrder createPurchaseOrderFrame = new createPurchaseOrder();
    createPurchaseOrderFrame.setVisible(true);
    createPurchaseOrderFrame.pack();
    createPurchaseOrderFrame.setLocationRelativeTo(null);
    this.dispose();
  }// GEN-LAST:event_jButton9ActionPerformed

  private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton2ActionPerformed
    viewRequisition viewRequisitionFrame = new viewRequisition();
    viewRequisitionFrame.setVisible(true);
    viewRequisitionFrame.pack();
    viewRequisitionFrame.setLocationRelativeTo(null);
    this.dispose();
  }// GEN-LAST:event_jButton2ActionPerformed

  private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton8ActionPerformed
    viewSupplier viewSupplierFrame = new viewSupplier();
    viewSupplierFrame.setVisible(true);
    viewSupplierFrame.pack();
    viewSupplierFrame.setLocationRelativeTo(null);
    this.dispose();
  }// GEN-LAST:event_jButton8ActionPerformed

  private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton7ActionPerformed
    purchaseManagerPage purchaseManagerFrame = new purchaseManagerPage();
    purchaseManagerFrame.setVisible(true);
    purchaseManagerFrame.pack();
    purchaseManagerFrame.setLocationRelativeTo(null);
    this.dispose();
  }// GEN-LAST:event_jButton7ActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
    // (optional) ">
    /*
     * If Nimbus (introduced in Java SE 6) is not available, stay with the default
     * look and feel.
     * For details see
     * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(createPurchaseOrder.class.getName()).log(java.util.logging.Level.SEVERE, null,
          ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(createPurchaseOrder.class.getName()).log(java.util.logging.Level.SEVERE, null,
          ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(createPurchaseOrder.class.getName()).log(java.util.logging.Level.SEVERE, null,
          ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(createPurchaseOrder.class.getName()).log(java.util.logging.Level.SEVERE, null,
          ex);
    }
    // </editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new createPurchaseOrder().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JComboBox<String> dateCombo;
  private javax.swing.JLabel dayLabel;
  private javax.swing.JButton jButton1;
  private javax.swing.JButton jButton2;
  private javax.swing.JButton jButton5;
  private javax.swing.JButton jButton7;
  private javax.swing.JButton jButton8;
  private javax.swing.JButton jButton9;
  private javax.swing.JComboBox<String> jComboBox1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JSpinner jSpinner1;
  private javax.swing.JComboBox<String> monthCombo;
  private javax.swing.JLabel monthLabel;
  private javax.swing.JLabel quantityLabel;
  private javax.swing.JComboBox<String> supplierCombo;
  private javax.swing.JLabel thresholdLabel;
  private javax.swing.JButton viewPurchaseButton;
  private javax.swing.JComboBox<String> yearCombo;
  private javax.swing.JLabel yearLabel;
  // End of variables declaration//GEN-END:variables
}
