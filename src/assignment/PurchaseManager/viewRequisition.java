/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package assignment.PurchaseManager;

import assignment.FileHandler;
import assignment.PurchaseManager.PurchaseManager;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import java.util.stream.Collectors;

/**
 *
 * @author Admin
 */
public class viewRequisition extends javax.swing.JFrame {

  /**
   * Creates new form viewRequisition
   */
  public viewRequisition() {
    initComponents();
    loadTable();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated
  // Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jButton6 = new javax.swing.JButton();
    jPanel1 = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    approveButton = new javax.swing.JButton();
    rejectButton = new javax.swing.JButton();
    jPanel2 = new javax.swing.JPanel();
    jButton7 = new javax.swing.JButton();
    jButton4 = new javax.swing.JButton();
    jButton3 = new javax.swing.JButton();
    jButton9 = new javax.swing.JButton();
    jButton5 = new javax.swing.JButton();
    jButton8 = new javax.swing.JButton();
    jScrollPane1 = new javax.swing.JScrollPane();
    jTable1 = new javax.swing.JTable();
    searchTextField = new javax.swing.JTextField();
    searchButton = new javax.swing.JButton();
    searchLabel = new javax.swing.JLabel();
    statusLabel = new javax.swing.JLabel();
    statusCombo = new javax.swing.JComboBox<>();

    jButton6.setBackground(new java.awt.Color(255, 204, 204));
    jButton6.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
    jButton6.setText("Main Page");

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setPreferredSize(new java.awt.Dimension(950, 600));

    jPanel1.setBackground(new java.awt.Color(255, 255, 255));

    jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
    jLabel1.setText("View Requisition");

    approveButton.setBackground(new java.awt.Color(0, 0, 0));
    approveButton.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
    approveButton.setForeground(new java.awt.Color(255, 255, 255));
    approveButton.setText("Approve");
    approveButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        approveButtonActionPerformed(evt);
      }
    });

    rejectButton.setBackground(new java.awt.Color(0, 0, 0));
    rejectButton.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
    rejectButton.setForeground(new java.awt.Color(255, 255, 255));
    rejectButton.setText("Reject");
    rejectButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        rejectButtonActionPerformed(evt);
      }
    });

    jPanel2.setBackground(new java.awt.Color(0, 0, 0));

    jButton7.setBackground(new java.awt.Color(0, 0, 0));
    jButton7.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
    jButton7.setForeground(new java.awt.Color(255, 255, 255));
    jButton7.setText("<");
    jButton7.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    jButton7.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton7ActionPerformed(evt);
      }
    });

    jButton4.setBackground(new java.awt.Color(0, 0, 0));
    jButton4.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
    jButton4.setForeground(new java.awt.Color(255, 255, 255));
    jButton4.setText("Approve Purchase Order");
    jButton4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    jButton4.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton4ActionPerformed(evt);
      }
    });

    jButton3.setBackground(new java.awt.Color(0, 0, 0));
    jButton3.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
    jButton3.setForeground(new java.awt.Color(255, 255, 255));
    jButton3.setText("View Items");
    jButton3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    jButton3.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton3ActionPerformed(evt);
      }
    });

    jButton9.setBackground(new java.awt.Color(0, 0, 0));
    jButton9.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
    jButton9.setForeground(new java.awt.Color(255, 255, 255));
    jButton9.setText("Create Purchase Order");
    jButton9.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    jButton9.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton9ActionPerformed(evt);
      }
    });

    jButton5.setBackground(new java.awt.Color(0, 0, 0));
    jButton5.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
    jButton5.setForeground(new java.awt.Color(255, 255, 255));
    jButton5.setText("View Requisitions");
    jButton5.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    jButton5.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton5ActionPerformed(evt);
      }
    });

    jButton8.setBackground(new java.awt.Color(0, 0, 0));
    jButton8.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
    jButton8.setForeground(new java.awt.Color(255, 255, 255));
    jButton8.setText("View Supplier");
    jButton8.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    jButton8.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton8ActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton7)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                    javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(39, 39, 39)
                .addComponent(jButton9)
                .addGap(41, 41, 41)
                .addComponent(jButton5)
                .addGap(55, 55, 55)
                .addComponent(jButton8)
                .addGap(92, 92, 92)));
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
                            javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
                            javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
                            javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
                            javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
                            javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

    jTable1.setModel(new javax.swing.table.DefaultTableModel(
        new Object[][] {

        },
        new String[] {
            "PR ID", "Item Name", "Item Quantity", "Item Status", "SM ID", "Required Date", "Item ID", "Sup ID"
        }) {
      Class[] types = new Class[] {
          java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.String.class,
          java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
      };
      boolean[] canEdit = new boolean[] {
          false, false, false, false, false, false, false, false
      };

      public Class getColumnClass(int columnIndex) {
        return types[columnIndex];
      }

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit[columnIndex];
      }
    });
    jTable1.getTableHeader().setReorderingAllowed(false);
    jScrollPane1.setViewportView(jTable1);

    searchTextField.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        searchTextFieldActionPerformed(evt);
      }
    });

    searchButton.setText("Search");
    searchButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        searchButtonActionPerformed(evt);
      }
    });

    searchLabel.setText("Search:");

    statusLabel.setText("Status:");

    statusCombo
        .setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Rejected", "Pending" }));
    statusCombo.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        statusComboActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(338, 338, 338))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(approveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(rejectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92,
                                javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 891,
                            javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 387,
                                    javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchButton))
                            .addComponent(searchLabel))
                        .addGap(86, 86, 86)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(statusLabel)
                            .addComponent(statusCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 109,
                                javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(29, Short.MAX_VALUE)));
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                    javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchLabel)
                    .addComponent(statusLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE,
                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton)
                    .addComponent(statusCombo, javax.swing.GroupLayout.PREFERRED_SIZE,
                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196,
                    javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rejectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33,
                        javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(approveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33,
                        javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(58, Short.MAX_VALUE)));

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                    javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE)));
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                    javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)));

    pack();
    setLocationRelativeTo(null);
  }// </editor-fold>//GEN-END:initComponents

  private void rejectButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_rejectButtonActionPerformed
    int selectedRow = jTable1.getSelectedRow();
    if (selectedRow == -1) {
      JOptionPane.showMessageDialog(this, "Please select a requisition to reject", "No Selection",
          JOptionPane.WARNING_MESSAGE);
      return;
    }

    // Get current status
    String currentStatus = jTable1.getValueAt(selectedRow, 3).toString();

    if (currentStatus.equals("Rejected")) {
      JOptionPane.showMessageDialog(this, "Cannot reject a rejected requisition", "Action Not Allowed",
          JOptionPane.WARNING_MESSAGE);
      return;
    }

    // Get requisition ID
    String requisitionId = jTable1.getValueAt(selectedRow, 0).toString();

    int confirm = JOptionPane.showConfirmDialog(this,
        "Are you sure you want to reject requisition " + requisitionId + "?",
        "Confirm Rejection", JOptionPane.YES_NO_OPTION);

    if (confirm == JOptionPane.YES_OPTION) {
      updateRequisitionStatus(requisitionId, "Rejected");
    }
  }// GEN-LAST:event_rejectButtonActionPerformed

  private void updateRequisitionStatus(String requisitionId, String newStatus) {
    try {
      PurchaseManager purchaseManager = new PurchaseManager();
      List<String[]> requisitionData = purchaseManager.viewRequisitions();
      List<String> updatedRecords = new ArrayList<>();
      boolean found = false;

      for (String[] row : requisitionData) {
        if (row[0].trim().equals(requisitionId)) {
          row[3] = newStatus;
          found = true;
        }
        StringBuilder record = new StringBuilder();
        for (int i = 0; i < row.length; i++) {
          record.append(row[i]);
          if (i < row.length - 1) {
            record.append(",");
          }
        }
        updatedRecords.add(record.toString());
      }

      if (found) {
        try {
          writeRecords(updatedRecords);
          loadTable();
          JOptionPane.showMessageDialog(this, "Requisition " + requisitionId + " has been " + newStatus.toLowerCase(),
              "Status Updated",
              JOptionPane.INFORMATION_MESSAGE);
          return;
        } catch (Exception e) {
          JOptionPane.showMessageDialog(this, "Requisition status could not be updated: " + e.getMessage(), "Error",
              JOptionPane.ERROR_MESSAGE);
        }
      }
    } catch (Exception e) {
      JOptionPane.showMessageDialog(this, "Requisition status could not be updated: " + e.getMessage(), "Error",
          JOptionPane.ERROR_MESSAGE);
    }
  }

  private void writeRecords(List<String> records) {
    try {
      FileHandler fileHandler = new FileHandler("src/assignment/database/requisition.txt");
      fileHandler.writeRecords(records);
    } catch (Exception e) {
      JOptionPane.showMessageDialog(this, "Requisition status could not be updated: " + e.getMessage(), "Error",
          JOptionPane.ERROR_MESSAGE);
    }
  }

  private void statusComboActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_statusComboActionPerformed
    String selectedStatus = statusCombo.getSelectedItem().toString();
    if (selectedStatus.equals("Select")) {
      loadTable();
    } else {
      filterByStatus(selectedStatus);
    }
  }// GEN-LAST:event_statusComboActionPerformed

  private void filterByStatus(String selectedStatus) {
    PurchaseManager purchaseManager = new PurchaseManager();
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0); // Clear existing rows
    //
    List<String[]> requisitionData = purchaseManager.viewRequisitions();
    boolean foundMatching = false;

    for (String[] row : requisitionData) {
      if (row[3].trim().equals(selectedStatus)) {
        model.addRow(row);
        foundMatching = true;
      }
    }

    if (!foundMatching) {
      JOptionPane.showMessageDialog(this, "No requisitions found with status: " + selectedStatus,
          "No Matching Requisitions", JOptionPane.ERROR_MESSAGE);
    }
  }

  private void searchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_searchTextFieldActionPerformed
    // TODO add your handling code here:
  }// GEN-LAST:event_searchTextFieldActionPerformed

  private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_searchButtonActionPerformed
    String searchText = searchTextField.getText().trim();
    if (!searchText.isEmpty()) {
      searchAndDisplayResult(searchText);
    } else {
      JOptionPane.showMessageDialog(this, "Please enter an item ID or Item Name", "Error", JOptionPane.ERROR_MESSAGE);
    }
  }// GEN-LAST:event_searchButtonActionPerformed

  private void searchAndDisplayResult(String searchText) {
    String selectedStatus = statusCombo.getSelectedItem().toString();
    PurchaseManager purchaseManager = new PurchaseManager();
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0); // Clear existing rows

    List<String[]> lines = purchaseManager.viewRequisitions(); // Read all lines from requisition.txt
    boolean foundMatching = false;

    for (String[] data : lines) {
      boolean statusMatch = selectedStatus.equals("Select");
      boolean searchMatch = data[0].trim().equals(searchText)
          || data[4].trim().equals(searchText) || data[6].trim().equals(searchText)
          || data[7].trim().equals(searchText);

      if (data.length >= 4 && statusMatch && searchMatch) {
        model.addRow(new Object[] {
            data[0].trim(), // PR ID
            data[1].trim(), // Item Name
            data[2].trim(), // Item Quantity
            data[3].trim(), // Item Status
            data[4].trim(), // SM ID
            data[5].trim(), // Required Date
            data[6].trim(), // Item ID
            data[7].trim(), // Sup ID
        });
        foundMatching = true;
      }
    }
    if (!foundMatching) {
      String message = selectedStatus.equals("Select") ? "No matching items found"
          : "No requisitions found with status: " + selectedStatus;
      JOptionPane.showMessageDialog(this, message, "No Results", JOptionPane.ERROR_MESSAGE);
    }
  }

  private void loadTable() {
    PurchaseManager purchaseManager = new PurchaseManager();
    List<String[]> requisitionData = purchaseManager.viewRequisitions();

    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0);

    for (String[] row : requisitionData) {
      model.addRow(row);
    }
  }

  private void approveButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_approveButtonActionPerformed
    int selectedRow = jTable1.getSelectedRow();
    if (selectedRow == -1) {
      JOptionPane.showMessageDialog(this, "Please select a requisition to approve", "No Selection",
          JOptionPane.WARNING_MESSAGE);
      return;
    }

    // Get current status
    String currentStatus = jTable1.getValueAt(selectedRow, 3).toString();

    if (currentStatus.equals("Rejected")) {
      JOptionPane.showMessageDialog(this, "Cannot approve a rejected requisition", "Action Not Allowed",
          JOptionPane.WARNING_MESSAGE);
      return;
    }

    // Get requisition ID
    String requisitionId = jTable1.getValueAt(selectedRow, 0).toString();

    int confirm = JOptionPane.showConfirmDialog(this,
        "Are you sure you want to approve requisition " + requisitionId + "?",
        "Confirm Approval", JOptionPane.YES_NO_OPTION);

    if (confirm == JOptionPane.YES_OPTION) {
      try {
        String[] rowData = new String[jTable1.getColumnCount()];
        for (int i = 0; i < jTable1.getColumnCount(); i++) {
          rowData[i] = jTable1.getValueAt(selectedRow, i).toString();
        }

        rowData[3] = "Approved";

        appendToPurchaseOrder(rowData);

        removeRequisitionRow(rowData[0]);

        loadTable();
        JOptionPane.showMessageDialog(this,
            "Requisition " + rowData[0] + " has been approved and move to Purchase Order",
            "Success",
            JOptionPane.INFORMATION_MESSAGE);
      } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Requisition status could not be updated: " + e.getMessage(), "Error",
            JOptionPane.ERROR_MESSAGE);
      }
    }
  }// GEN-LAST:event_approveButtonActionPerformed

  private void removeRequisitionRow(String prId) {
    try {
      FileHandler fileHandler = new FileHandler("src/assignment/database/requisition.txt");
      List<String> lines = fileHandler.readRecords();

      lines.removeIf(line -> line.startsWith(prId + ","));

      fileHandler.writeRecords(lines);
    } catch (Exception e) {
      throw new RuntimeException("Requisition status could not be updated: " + e.getMessage());
    }
  }

  private void appendToPurchaseOrder(String[] rowData) {
    try {
      FileHandler fileHandler = new FileHandler("src/assignment/database/purchOrder.txt");

      StringBuilder record = new StringBuilder();
      for (int i = 0; i < rowData.length; i++) {
        record.append(rowData[i]);
        if (i < rowData.length - 1) {
          record.append(",");
        }
      }
      fileHandler.appendRecord(record.toString());
    } catch (Exception e) {
      JOptionPane.showMessageDialog(this, "Requisition status could not be updated: " + e.getMessage(), "Error",
          JOptionPane.ERROR_MESSAGE);
    }
  }

  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
    // TODO add your handling code here:
  }// GEN-LAST:event_jButton1ActionPerformed

  private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton4ActionPerformed
    approvePurchaseOrder approvePurchaseOrderFrame = new approvePurchaseOrder();
    approvePurchaseOrderFrame.setVisible(true);
    approvePurchaseOrderFrame.pack();
    approvePurchaseOrderFrame.setLocationRelativeTo(null);
    this.dispose();
  }// GEN-LAST:event_jButton4ActionPerformed

  private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton3ActionPerformed
    viewItems viewItemsFrame = new viewItems();
    viewItemsFrame.setVisible(true);
    viewItemsFrame.pack();
    viewItemsFrame.setLocationRelativeTo(null);
    this.dispose();
  }// GEN-LAST:event_jButton3ActionPerformed

  private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton9ActionPerformed
    createPurchaseOrder createPurchaseOrderFrame = new createPurchaseOrder();
    createPurchaseOrderFrame.setVisible(true);
    createPurchaseOrderFrame.pack();
    createPurchaseOrderFrame.setLocationRelativeTo(null);
    this.dispose();
  }// GEN-LAST:event_jButton9ActionPerformed

  private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton5ActionPerformed
    viewRequisition viewRequisitionFrame = new viewRequisition();
    viewRequisitionFrame.setVisible(true);
    viewRequisitionFrame.pack();
    viewRequisitionFrame.setLocationRelativeTo(null);
    this.dispose();
  }// GEN-LAST:event_jButton5ActionPerformed

  private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton8ActionPerformed
    viewSupplier viewSupplierFrame = new viewSupplier();
    viewSupplierFrame.setVisible(true);
    viewSupplierFrame.pack();
    viewSupplierFrame.setLocationRelativeTo(null);
    this.dispose();
  }// GEN-LAST:event_jButton8ActionPerformed

  private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton7ActionPerformed
    purchaseManagerPage purchaseManagerFrame = new purchaseManagerPage();
    purchaseManagerFrame.setVisible(true);
    purchaseManagerFrame.pack();
    purchaseManagerFrame.setLocationRelativeTo(null);
    this.dispose();
  }// GEN-LAST:event_jButton7ActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
    // (optional) ">
    /*
     * If Nimbus (introduced in Java SE 6) is not available, stay with the default
     * look and feel.
     * For details see
     * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(viewRequisition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(viewRequisition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(viewRequisition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(viewRequisition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    // </editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new viewRequisition().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton approveButton;
  private javax.swing.JButton jButton3;
  private javax.swing.JButton jButton4;
  private javax.swing.JButton jButton5;
  private javax.swing.JButton jButton6;
  private javax.swing.JButton jButton7;
  private javax.swing.JButton jButton8;
  private javax.swing.JButton jButton9;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JTable jTable1;
  private javax.swing.JButton rejectButton;
  private javax.swing.JButton searchButton;
  private javax.swing.JLabel searchLabel;
  private javax.swing.JTextField searchTextField;
  private javax.swing.JComboBox<String> statusCombo;
  private javax.swing.JLabel statusLabel;
  // End of variables declaration//GEN-END:variables
}
