/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package assignment.SalesManager;

import assignment.Session;
import assignment.SalesReportPreview;
import java.io.*;
import java.time.*;
import java.time.format.*;
import java.util.*;
import javax.swing.table.*;
import java.text.DecimalFormat;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.print.PrinterJob;
import java.awt.print.PrinterException;

/**
 *
 * @author Admin
 */
public class enterDailySales extends javax.swing.JFrame {
  private DefaultTableModel tableModel;
  private final DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern("yyyy-MM-dd");
  private List<String> allFileLines;

  /**
   * Creates new form enterDailySales
   */
  public enterDailySales() {
    initComponents();
    Session session = Session.getInstance();
    salesText.setText(session.getUsername());
    allFileLines = new ArrayList<>();

    tableModel = new DefaultTableModel(
        new String[] {
            "Item ID", "Item Name", "Item Quantity", "Price per Item", "Total"
        }, 0) {
      public boolean isCellEditable(int row, int column) {
        return column == 2 || column == 3;
      }

      public void setValueAt(Object value, int row, int column) {
        super.setValueAt(value, row, column);
        if (column == 2 || column == 3) {
          updateRowTotal(row);
        }
      }
    };

    jTable1.setModel(tableModel);

    setupDateComboBox();

    loadTableData((String) dateCombo.getSelectedItem());

    dateCombo.addActionListener(e -> loadTableData((String) dateCombo.getSelectedItem()));
    confirmChangesButton.addActionListener(e -> saveChangesToFile());
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        backButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        addButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        confirmChangesButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        salesText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        dateCombo = new javax.swing.JComboBox<>();
        todayButton = new javax.swing.JButton();
        generateReportButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(950, 600));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Daily Sales Report ");

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        backButton.setBackground(new java.awt.Color(0, 0, 0));
        backButton.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("<");
        backButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Create Requisition");
        jButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 0, 0));
        jButton4.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Enter Daily Sales");
        jButton4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(0, 0, 0));
        jButton5.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Check Stock Level");
        jButton5.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(0, 0, 0));
        jButton8.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("View Purchase Orders");
        jButton8.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backButton)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addGap(18, 18, 18)
                .addComponent(jButton5)
                .addGap(18, 18, 18)
                .addComponent(jButton8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(backButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Item Name", "Item Quantity", "Price per Item", "Total"
            }
        ));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        confirmChangesButton.setText("Confirm Changes");

        jLabel2.setText("Sales Person:");

        salesText.setEditable(false);
        salesText.setEnabled(false);

        jLabel3.setText("Date:");

        dateCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        todayButton.setText("Today");
        todayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todayButtonActionPerformed(evt);
            }
        });

        generateReportButton.setText("Generate");
        generateReportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateReportButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(addButton)
                        .addGap(18, 18, 18)
                        .addComponent(deleteButton)
                        .addGap(18, 18, 18)
                        .addComponent(confirmChangesButton)
                        .addGap(18, 18, 18)
                        .addComponent(generateReportButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 915, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(salesText, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(dateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(todayButton)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salesText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(todayButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(deleteButton)
                    .addComponent(confirmChangesButton)
                    .addComponent(generateReportButton))
                .addContainerGap(119, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

  private void generateReportButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_generateReportButtonActionPerformed
    String selectedDate = (String) dateCombo.getSelectedItem();
    String salesPerson = salesText.getText();

    SalesReportPreview preview = new SalesReportPreview(this, selectedDate, salesPerson, tableModel);
    preview.setVisible(true);
  }// GEN-LAST:event_generateReportButtonActionPerformed

  private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_deleteButtonActionPerformed
    int selectedRow = jTable1.getSelectedRow();
    if (selectedRow == -1) {
      JOptionPane.showMessageDialog(this, "Please select a row to delete", "Error", JOptionPane.ERROR_MESSAGE);
      return;
    }

    int response = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this row?",
        "Confirm Delete", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
    if (response == JOptionPane.YES_OPTION) {
      // Remove from table
      String itemId = tableModel.getValueAt(selectedRow, 0).toString();
      String selectedDate = (String) dateCombo.getSelectedItem();
      tableModel.removeRow(selectedRow);

      // Remove from file
      List<String> lines = new ArrayList<>();
      try (BufferedReader reader = new BufferedReader(new FileReader("src/assignment/database/dailySales.txt"))) {
        String line;
        while ((line = reader.readLine()) != null) {
          String[] parts = line.split(",");
          if (!(parts[0].equals(itemId) && parts[6].equals(selectedDate) &&
              parts[5].equals(salesText.getText()))) {
            lines.add(line);
          }
        }
      } catch (IOException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error reading file", "Error", JOptionPane.ERROR_MESSAGE);
        return;
      }

      try (BufferedWriter writer = new BufferedWriter(new FileWriter("src/assignment/database/dailySales.txt"))) {
        for (String line : lines) {
          writer.write(line);
          writer.newLine();
        }
      } catch (IOException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error saving changes", "Error", JOptionPane.ERROR_MESSAGE);
      }
    }

  }// GEN-LAST:event_deleteButtonActionPerformed

  private void todayButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_todayButtonActionPerformed
    String today = LocalDate.now().format(DATE_FORMATTER);
    dateCombo.setSelectedItem(today);
  }// GEN-LAST:event_todayButtonActionPerformed

  private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_backButtonActionPerformed
    salesManagerPage salesManagerFrame = new salesManagerPage();
    salesManagerFrame.setVisible(true);
    salesManagerFrame.pack();
    salesManagerFrame.setLocationRelativeTo(null);
    this.dispose();
  }// GEN-LAST:event_jButton2ActionPerformed

  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
    createRequisition createRequisitionFrame = new createRequisition();
    createRequisitionFrame.setVisible(true);
    createRequisitionFrame.pack();
    createRequisitionFrame.setLocationRelativeTo(null);
    this.dispose();
  }// GEN-LAST:event_jButton1ActionPerformed

  private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton4ActionPerformed
    enterDailySales enterDailySalesFrame = new enterDailySales();
    enterDailySalesFrame.setVisible(true);
    enterDailySalesFrame.pack();
    enterDailySalesFrame.setLocationRelativeTo(null);
    this.dispose();
  }// GEN-LAST:event_jButton4ActionPerformed

  private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton5ActionPerformed
    checkStockLevel checkStockLevelFrame = new checkStockLevel();
    checkStockLevelFrame.setVisible(true);
    checkStockLevelFrame.pack();
    checkStockLevelFrame.setLocationRelativeTo(null);
    this.dispose();
  }// GEN-LAST:event_jButton5ActionPerformed

  private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton8ActionPerformed
    viewPurchaseOrder viewPurchaseOrderFrame = new viewPurchaseOrder();
    viewPurchaseOrderFrame.setVisible(true);
    viewPurchaseOrderFrame.pack();
    viewPurchaseOrderFrame.setLocationRelativeTo(null);
    this.dispose();
  }// GEN-LAST:event_jButton8ActionPerformed

  private void setupDateComboBox() {
    Set<String> dates = new TreeSet<>();
    LocalDate today = LocalDate.now();
    String todayStr = today.format(DATE_FORMATTER);

    try (BufferedReader reader = new BufferedReader(new FileReader("src/assignment/database/dailySales.txt"))) {
      String line;
      while ((line = reader.readLine()) != null) {
        String[] parts = line.split(",");
        if (parts.length >= 6) {
          dates.add(parts[6]);
        }
      }
    } catch (IOException e) {
      e.printStackTrace();
    }

    dates.add(todayStr);

    dateCombo.setModel(new DefaultComboBoxModel<>(dates.toArray(new String[0])));
    dateCombo.setSelectedItem(todayStr);

    dateCombo.addActionListener(e -> {
      String selectedDate = (String) dateCombo.getSelectedItem();
      addButton.setEnabled(selectedDate.equals(todayStr));
      confirmChangesButton.setEnabled(selectedDate.equals(todayStr));
      deleteButton.setEnabled(selectedDate.equals(todayStr));
    });

    addButton.setEnabled(dateCombo.getSelectedItem().equals(todayStr));
    confirmChangesButton.setEnabled(dateCombo.getSelectedItem().equals(todayStr));
    deleteButton.setEnabled(dateCombo.getSelectedItem().equals(todayStr));
  }

  private void loadTableData(String selectedDate) {
    tableModel.setRowCount(0);

    DecimalFormat df = new DecimalFormat("#,##0.00");

    try (BufferedReader reader = new BufferedReader(new FileReader("src/assignment/database/dailySales.txt"))) {
      String line;
      while ((line = reader.readLine()) != null) {
        String[] parts = line.split(",");
        if (parts[6].equals(selectedDate) && parts[5].equals(salesText.getText())) {

          double total = Double.parseDouble(parts[3]) * Double.parseDouble(parts[2]);

          tableModel.addRow(new Object[] {
              parts[0], // Item ID
              parts[1], // Item Name
              parts[2], // Quantity
              df.format(Double.parseDouble(parts[3])), // Price
              df.format(total) // Total
          });
        }
      }
    } catch (Exception e) {
      e.printStackTrace();
    }
  }

  private void updateRowTotal(int row) {
    try {
      double quantity = Double.parseDouble(tableModel.getValueAt(row, 2).toString());
      double price = Double.parseDouble(tableModel.getValueAt(row, 3).toString().replace(",", ""));
      double total = quantity * price;
      DecimalFormat df = new DecimalFormat("#,##0.00");
      tableModel.setValueAt(df.format(total), row, 4);
    } catch (NumberFormatException e) {
      JOptionPane.showMessageDialog(this, "Please enter a valid number in the quantity or price fields.",
          "Invalid Input", JOptionPane.ERROR_MESSAGE);
    }
  }

  private void saveChangesToFile() {
    String selectedDate = (String) dateCombo.getSelectedItem();
    List<String> updatedLines = new ArrayList<>();
    Set<String> processedIds = new HashSet<>();
    boolean dateAndUserFound = false;

    // First read all existing lines into memory
    try (BufferedReader reader = new BufferedReader(new FileReader("src/assignment/database/dailySales.txt"))) {
      allFileLines = new ArrayList<>();
      String line;
      while ((line = reader.readLine()) != null) {
        allFileLines.add(line);
      }
    } catch (IOException e) {
      e.printStackTrace();
      JOptionPane.showMessageDialog(this, "Error reading file.", "Error", JOptionPane.ERROR_MESSAGE);
      return;
    }

    // Process existing lines
    for (String line : allFileLines) {
      String[] parts = line.split(",");
      if (parts.length >= 7) { // Ensure we have all required parts
        if (parts[6].equals(selectedDate) && parts[5].equals(salesText.getText())) {
          dateAndUserFound = true;
          String itemId = parts[0];
          boolean found = false;

          // Check if this item exists in the current table
          for (int i = 0; i < tableModel.getRowCount(); i++) {
            String currentItemId = tableModel.getValueAt(i, 0).toString();
            if (itemId.equals(currentItemId)) {
              // Update with new values from table
              double quantity = Double.parseDouble(tableModel.getValueAt(i, 2).toString());
              double price = Double.parseDouble(tableModel.getValueAt(i, 3).toString().replace(",", ""));
              double total = quantity * price;

              String newLine = String.format("%s,%s,%.2f,%.2f,%.2f,%s,%s",
                  itemId,
                  tableModel.getValueAt(i, 1).toString(),
                  quantity,
                  price,
                  total,
                  salesText.getText(),
                  selectedDate);
              updatedLines.add(newLine);
              processedIds.add(itemId);
              found = true;
              break;
            }
          }

          if (!found) {
            // If the item is not in the current table, it was deleted
            continue;
          }
        } else {
          // Keep lines for other dates/users unchanged
          updatedLines.add(line);
        }
      }
    }

    // Add any new rows from the table that weren't in the original file
    for (int i = 0; i < tableModel.getRowCount(); i++) {
      String itemId = tableModel.getValueAt(i, 0).toString();
      if (!processedIds.contains(itemId)) {
        double quantity = Double.parseDouble(tableModel.getValueAt(i, 2).toString());
        double price = Double.parseDouble(tableModel.getValueAt(i, 3).toString().replace(",", ""));
        double total = quantity * price;

        String newLine = String.format("%s,%s,%.2f,%.2f,%.2f,%s,%s",
            itemId,
            tableModel.getValueAt(i, 1).toString(),
            quantity,
            price,
            total,
            salesText.getText(),
            selectedDate);
        updatedLines.add(newLine);
      }
    }

    // Write all lines back to file
    try (BufferedWriter writer = new BufferedWriter(new FileWriter("src/assignment/database/dailySales.txt"))) {
      for (String line : updatedLines) {
        writer.write(line);
        writer.newLine();
      }
      JOptionPane.showMessageDialog(this, "Changes saved successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
    } catch (IOException e) {
      e.printStackTrace();
      JOptionPane.showMessageDialog(this, "An error occurred while saving changes.", "Error",
          JOptionPane.ERROR_MESSAGE);
    }
  }

  private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addButtonActionPerformed
    JDialog dialog = new JDialog(this, "Add Item", true);
    dialog.setLayout(new GridBagLayout());
    GridBagConstraints gbc = new GridBagConstraints();
    gbc.insets = new Insets(5, 5, 5, 5);
    gbc.fill = GridBagConstraints.HORIZONTAL;

    // Components
    JLabel nameLabel = new JLabel("Item Name:");
    JComboBox<String> itemCombo = new JComboBox<>();
    JLabel quantityLabel = new JLabel("Quantity:");
    JTextField quantityField = new JTextField(10);
    JButton confirmButton = new JButton("Add");
    JButton cancelButton = new JButton("Cancel");

    // Load items from stock.txt
    Map<String, String[]> stockItems = new HashMap<>();
    try (BufferedReader reader = new BufferedReader(new FileReader("src/assignment/database/stock.txt"))) {
      String line;
      while ((line = reader.readLine()) != null) {
        String[] parts = line.split(",");
        if (parts.length >= 4) {
          stockItems.put(parts[1], new String[] { parts[0], parts[4] });
          itemCombo.addItem(parts[1]);
        }
      }
    } catch (IOException e) {
      e.printStackTrace();
      JOptionPane.showMessageDialog(null, "Error reading file: " + e.getMessage());
      return;
    }

    gbc.gridx = 0;
    gbc.gridy = 0;
    dialog.add(nameLabel, gbc);

    gbc.gridx = 1;
    gbc.gridy = 0;
    gbc.gridwidth = 2;
    dialog.add(itemCombo, gbc);

    gbc.gridx = 0;
    gbc.gridy = 1;
    gbc.gridwidth = 1;
    dialog.add(quantityLabel, gbc);

    gbc.gridx = 1;
    gbc.gridy = 1;
    gbc.gridwidth = 2;
    dialog.add(quantityField, gbc);

    gbc.gridx = 1;
    gbc.gridy = 2;
    gbc.gridwidth = 1;
    dialog.add(confirmButton, gbc);

    gbc.gridx = 2;
    gbc.gridy = 2;
    dialog.add(cancelButton, gbc);

    confirmButton.addActionListener(e -> {
      try {
        String selectedItem = (String) itemCombo.getSelectedItem();
        String[] itemInfo = stockItems.get(selectedItem);
        double quantity = Double.parseDouble(quantityField.getText());
        double price = Double.parseDouble(itemInfo[1]);
        double total = quantity * price;

        tableModel.addRow(new Object[] {
            itemInfo[0],
            selectedItem,
            quantity,
            new DecimalFormat("#,###.00").format(price),
            new DecimalFormat("#,###.00").format(total)
        });
        String newLine = String.format("%s,%s,%.2f,%.2f,%.2f,%s,%s",
            itemInfo[0],
            selectedItem,
            quantity,
            price,
            total,
            salesText.getText(),
            dateCombo.getSelectedItem());

        try (BufferedWriter writer = new BufferedWriter(
            new FileWriter("src/assignment/database/dailySales.txt", true))) {
          writer.write(newLine);
          writer.newLine();
        } catch (IOException ex) {
          ex.printStackTrace();
          JOptionPane.showMessageDialog(null, "Error writing file: " + ex.getMessage());
        }

        dialog.dispose();
      } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(null, "Please enter a valid number");
      }
    });

    cancelButton.addActionListener(e -> dialog.dispose());

    dialog.pack();
    dialog.setLocationRelativeTo(this);
    dialog.setVisible(true);
  }// GEN-LAST:event_addButtonActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
    // (optional) ">
    /*
     * If Nimbus (introduced in Java SE 6) is not available, stay with the default
     * look and feel.
     * For details see
     * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(enterDailySales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(enterDailySales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(enterDailySales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(enterDailySales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    // </editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new enterDailySales().setVisible(true);
      }
    });
  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton backButton;
    private javax.swing.JButton confirmChangesButton;
    private javax.swing.JComboBox<String> dateCombo;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton generateReportButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField salesText;
    private javax.swing.JButton todayButton;
    // End of variables declaration//GEN-END:variables
}
